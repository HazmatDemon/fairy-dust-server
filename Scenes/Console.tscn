[gd_scene load_steps=9 format=2]

[ext_resource path="res://Fonts/Ubuntu_Mono/UbuntuMono-Regular.ttf" type="DynamicFontData" id=1]
[ext_resource path="res://Fonts/Ubuntu_Mono/UbuntuMono-Bold.ttf" type="DynamicFontData" id=2]

[sub_resource type="DynamicFont" id=1]
extra_spacing_top = 3
extra_spacing_bottom = 3
font_data = ExtResource( 1 )

[sub_resource type="StyleBoxFlat" id=2]
bg_color = Color( 0.109804, 0.223529, 0.356863, 0.521569 )
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color( 0.0901961, 0.243137, 0.423529, 0.756863 )

[sub_resource type="Theme" id=3]
LineEdit/colors/clear_button_color = Color( 0.88, 0.88, 0.88, 1 )
LineEdit/colors/clear_button_color_pressed = Color( 1, 1, 1, 1 )
LineEdit/colors/cursor_color = Color( 0.94, 0.94, 0.94, 1 )
LineEdit/colors/font_color = Color( 0.921569, 0.913725, 0.458824, 1 )
LineEdit/colors/font_color_selected = Color( 0, 0, 0, 1 )
LineEdit/colors/font_color_uneditable = Color( 0.88, 0.88, 0.88, 0.5 )
LineEdit/colors/selection_color = Color( 0.49, 0.49, 0.49, 1 )
LineEdit/constants/minimum_spaces = 12
LineEdit/fonts/font = SubResource( 1 )
LineEdit/icons/clear = null
LineEdit/styles/focus = null
LineEdit/styles/normal = SubResource( 2 )
LineEdit/styles/read_only = null

[sub_resource type="DynamicFont" id=4]
font_data = ExtResource( 2 )

[sub_resource type="GDScript" id=5]
script/source = "extends RichTextLabel

func _process(delta):
	while not Log.output.empty():
		bbcode_text += Log.output.pop_front() + \"\\n\"
"

[sub_resource type="GDScript" id=6]
script/source = "extends LineEdit


onready var predict = $\"../../predict\"

func _ready():
	grab_focus()


func _on_input_gui_input(event):
	if event is InputEventKey:
		if event.scancode == KEY_ENTER and event.pressed and not event.echo:
			if not text.empty():
				Cons.execute(text)
				Cons.history.push_front(text)
				if Cons.history_index > 0:
					Cons.history_index = -1
				clear()
		if event.scancode == KEY_RIGHT and event.pressed and not event.echo:
			if not predict.text.empty():
				set_text(predict.text)
				set_cursor_position(text.length())
				predict.clear()
		if event.scancode == KEY_TAB and event.pressed and not event.echo:
			var cmds = Cons.list_similar(text)
			if cmds.size() == 1:
				set_text(cmds[0])
				set_cursor_position(text.length())
			else:
				for i in cmds:
					print(i)
		if event.scancode == KEY_UP and event.pressed:
			set_text(Cons.get_next())
			set_cursor_position(text.length())
		if event.scancode == KEY_DOWN and event.pressed:
			set_text(Cons.get_prev())
			set_cursor_position(text.length())


func _on_input2_text_changed(new_text):
	predict.set_text(Cons.predict(new_text))
"

[node name="Panel" type="Panel"]
anchor_right = 1.0
anchor_bottom = 0.5
margin_bottom = 300.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="predict" type="LineEdit" parent="."]
margin_top = 575.0
margin_right = 1024.0
margin_bottom = 600.0
focus_neighbour_left = NodePath(".")
focus_neighbour_top = NodePath(".")
focus_neighbour_right = NodePath(".")
focus_neighbour_bottom = NodePath(".")
focus_next = NodePath(".")
focus_previous = NodePath(".")
size_flags_horizontal = 3
theme = SubResource( 3 )
clear_button_enabled = true
caret_blink = true
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": ""
}

[node name="container" type="VBoxContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="output" type="RichTextLabel" parent="container"]
margin_right = 1024.0
margin_bottom = 571.0
focus_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
custom_fonts/normal_font = SubResource( 4 )
bbcode_enabled = true
meta_underlined = false
scroll_following = true
selection_enabled = true
script = SubResource( 5 )

[node name="input2" type="LineEdit" parent="container"]
margin_top = 575.0
margin_right = 1024.0
margin_bottom = 600.0
focus_neighbour_left = NodePath(".")
focus_neighbour_top = NodePath(".")
focus_neighbour_right = NodePath(".")
focus_neighbour_bottom = NodePath(".")
focus_next = NodePath(".")
focus_previous = NodePath(".")
size_flags_horizontal = 3
theme = SubResource( 3 )
clear_button_enabled = true
caret_blink = true
script = SubResource( 6 )
__meta__ = {
"_editor_description_": ""
}
[connection signal="gui_input" from="container/input2" to="container/input2" method="_on_input_gui_input"]
[connection signal="text_changed" from="container/input2" to="container/input2" method="_on_input2_text_changed"]
